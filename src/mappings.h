#include <map>
#include "bimap.h"
// Instruction and their valid addressing modes
static const map<string, vector<TokenType>> instruction_to_token_types =
{
    {"ADC", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"AND", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"ASL", {ACCUMULATOR, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"BCC", {ABSOLUTE_RELATIVE}},
    {"BCS", {ABSOLUTE_RELATIVE}},
    {"BEQ", {ABSOLUTE_RELATIVE}},
    {"BIT", {ZERO_PAGE, ABSOLUTE_RELATIVE}},
    {"BMI", {ABSOLUTE_RELATIVE}},
    {"BNE", {ABSOLUTE_RELATIVE}},
    {"BPL", {ABSOLUTE_RELATIVE}},
    {"BRK", {IMPLIED}},
    {"BVC", {ABSOLUTE_RELATIVE}},
    {"BVS", {ABSOLUTE_RELATIVE}},
    {"CLC", {IMPLIED}},
    {"CLD", {IMPLIED}},
    {"CLI", {IMPLIED}},
    {"CLV", {IMPLIED}},
    {"CMP", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"CPX", {IMMEDIATE, ZERO_PAGE, ABSOLUTE_RELATIVE}},
    {"CPY", {IMMEDIATE, ZERO_PAGE, ABSOLUTE_RELATIVE}},
    {"DEC", {ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"DEX", {IMPLIED}},
    {"DEY", {IMPLIED}},
    {"EOR", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"INC", {ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"INX", {IMPLIED}},
    {"INY", {IMPLIED}},
    {"JMP", {ABSOLUTE_RELATIVE, ABS_INDIRECT}},
    {"JSR", {ABSOLUTE_RELATIVE}},
    {"LDA", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"LDX", {IMMEDIATE, ZERO_PAGE, Y_ZERO_PAGE, ABSOLUTE_RELATIVE, Y_ABSOLUTE}},
    {"LDY", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"LSR", {ACCUMULATOR, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"NOP", {IMPLIED}},
    {"ORA", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"PHA", {IMPLIED}},
    {"PHP", {IMPLIED}},
    {"PLA", {IMPLIED}},
    {"PLP", {IMPLIED}},
    {"ROL", {ACCUMULATOR, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"ROR", {ACCUMULATOR, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE}},
    {"RTI", {IMPLIED}},
    {"RTS", {IMPLIED}},
    {"SBC", {IMMEDIATE, ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"SEC", {IMPLIED}},
    {"SED", {IMPLIED}},
    {"SEI", {IMPLIED}},
    {"STA", {ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE, X_ABSOLUTE, Y_ABSOLUTE, X_INDEX_ZP_INDIRECT, ZP_INDIRECT_Y_INDEX}},
    {"STX", {ZERO_PAGE, Y_ZERO_PAGE, ABSOLUTE_RELATIVE}},
    {"STY", {ZERO_PAGE, X_ZERO_PAGE, ABSOLUTE_RELATIVE}},
    {"TAX", {IMPLIED}},
    {"TAY", {IMPLIED}},
    {"TSX", {IMPLIED}},
    {"TXA", {IMPLIED}},
    {"TXS", {IMPLIED}},
    {"TYA", {IMPLIED}},
};

inline const auto& instruction_opcode_bimap = construct_bimap();